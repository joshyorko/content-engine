name: my-content-engine

services:
  jaws_db:
    image: bitnami/postgresql:latest
    container_name: jaws_db
    environment:
      - POSTGRESQL_USERNAME=myuser
      - POSTGRESQL_PASSWORD=mypassword
      - POSTGRESQL_DATABASE=jaws_db
    ports:
      - "5432:5432"
    volumes:
      - jaws_db_data:/var/lib/postgresql/data



  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["./wait-for-it.sh", "jaws_db:5432", "--", "/app/entrypoint.sh"]
    image: ghcr.io/joshyorko/content-engine:latest

    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DATABASE_URL=${DATABASE_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - AWS_REGION=${AWS_REGION}  # Add region if needed

    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - jaws_db

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: Pa22word22
    command: ["server", "--console-address", ":9001", "/data"]


  minio-setup:
    image: minio/mc:latest
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: Pa22word22
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for Minio to start...' &&
      /bin/sleep 10 &&
      mc alias set minio http://minio:9000 $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY &&
      mc mb minio/my-content-engine &&
      echo 'Minio setup complete'"

volumes:
  jaws_db_data:
  minio-data:
